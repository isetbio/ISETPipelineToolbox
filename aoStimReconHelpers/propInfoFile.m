function propInfoFile(pr, cnv)
% Save pertinent info in its own excel sheet for ready viewing, under the
% same name as the render structure itself.
%
% NOTE: This is a patch function to account for render structures that have
% already been built. Anything built after //24 should not need this as the
% code was also sent into the buildRenderStruct.m file. Should delete once
% no longer needed. 

% Set up the output filename
filename = fullfile(cnv.forwardRenderDirFull, ...
    [cnv.renderName, '_SummaryInfo.xlsx']);

% If there is no file already stored, load in the mosaic and save the
% proportion info.
if (~exist(filename,'file'))

    % Load in the pertinent cone mosaic, note that by this procedure we
    % only utilize the forward render structure information under the
    % assumption that these two are similar in all meaningful ways. Need to
    % reexamine this routine if that assumption fails.
    if (~exist(fullfile(cnv.forwardRenderDirFull, cnv.renderName),'file'))
        error('Forward render strucure not cached')
    else
        clear forwardRenderStructure;
        load(fullfile(cnv.forwardRenderDirFull, cnv.renderName),'renderStructure');
        forwardRenderStructure = renderStructure; clear renderStructure;
        grabRenderStruct(forwardRenderStructure, pr.eccXDegs, pr.eccYDegs, cnv.fieldSizeDegs, ...
            pr.nPixels, cnv.forwardPupilDiamMM, pr.forwardAORender, pr.forwardDefocusDiopters);
    end

    % Reassign variable name for convenience
    mosaicConeInfo = forwardRenderStructure.mosaicConeInfo;


% Create a table with all the relevant information. 
    A = [...
        mosaicConeInfo.regionVariant; ...
        mosaicConeInfo.regionWidths; ...
        mosaicConeInfo.numTotal; ...

        mosaicConeInfo.numL; ...
        mosaicConeInfo.numM; ...
        mosaicConeInfo.numS; ...

        mosaicConeInfo.targetPropsL; ...
        mosaicConeInfo.targetPropsM; ...
        mosaicConeInfo.targetPropsS; ...

        mosaicConeInfo.achievedPropsL; ...
        mosaicConeInfo.achievedPropsM; ...
        mosaicConeInfo.achievedPropsS; ...

        mosaicConeInfo.targetPropsLOfWholeMosaic; ...
        mosaicConeInfo.targetPropsMOfWholeMosaic; ...
        mosaicConeInfo.targetPropsSOfWholeMosaic; ...

        mosaicConeInfo.achievedPropsLOfWholeMosaic; ...
        mosaicConeInfo.achievedPropsMOfWholeMosaic; ...
        mosaicConeInfo.achievedPropsSOfWholeMosaic; ...
        ];

    T = array2table(A, 'VariableNames', {'Center' 'Near Surround' 'Distant Surround'}, ...
        'RowNames', {'Region Variant' 'Region Widths' 'Total Cones' ...
        'Num L' 'Num M' 'Num S' ...
        'Target Prop L' 'Target Prop M' 'Target Prop S' ...
        'Achieved Prop L' 'Achieved Prop M' 'Achieved Prop S' ...
        'Target Prop L Whole' 'Target Prop M Whole' 'Target Prop S Whole' ...
        'Achieved Prop L Whole' 'Achieved Prop M Whole' 'Achieved Prop S Whole'});

    writetable(T, filename, "Sheet", 1);
end
